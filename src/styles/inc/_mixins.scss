@mixin media-breakpoint-up($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    @media (min-width: $breakpoint-value) {
      @content;
    }
  }

  @else {
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

@mixin media-breakpoint-down($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    @media (max-width: ($breakpoint-value)) {
      @content;
    }
  }

  @else {
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

@mixin media-breakpoint-between($min, $max) {
  @if map-has-key($breakpoints, $min) and map-has-key($breakpoints, $max) {
    $min-breakpoint: map-get($breakpoints, $min);
    $max-breakpoint: map-get($breakpoints, $max);

    @media (min-width: $min-breakpoint) and (max-width: ($max-breakpoint)) {
      @content;
    }
  }

  @else {
    @if (map-has-key($breakpoints, $min)==false) {
      @warn 'Your min breakpoint was invalid: #{$min}.';
    }

    @if (map-has-key($breakpoints, $max)==false) {
      @warn 'Your max breakpoint was invalid: #{$max}.';
    }
  }
}

@mixin transvalue($prop, $transition...) {
  #{$prop}: $transition;
  -moz-#{$prop}: $transition;
  -ms-#{$prop}: $transition;
  -o-#{$prop}: $transition;
  -webkit-#{$prop}: $transition;
}

@mixin btnStyle {
  background-color: transparent;
  border: 0;
  text-decoration: none !important;
  overflow: hidden;
  position: relative;
  z-index: 1;
  font-size: 16px;
  line-height: 1.63;
  display: inline-block;
  float: none;
  margin: 0;
  padding: 0;
  text-align: left;
  box-shadow: none;
  outline: 0;
  text-transform: none;
  font-weight: 500;
  cursor: pointer;
  @include transvalue(transition, all 0.3s);
  color: $darkGrey;

  @include media-breakpoint-between(md, lg) {
    font-size: 14px;
  }
}

@mixin btnStyleDefault {
  border-radius: 50px;
  text-decoration: none;
  padding: 24px 24px;
  text-align: center;
  max-height: 60px;

  &::after {
    background: $white;
    content: '';
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 150%;
    z-index: -1;
    @include transvalue(transform, translateX(-100%) skew(-45deg));
    @include transvalue(transform-origin, 0 0);
    @include transvalue(transition,
      transform 1s cubic-bezier(0.07, 0.51, 0.12, 1));
  }

  @include media-breakpoint-down(lg) {
    padding: 9px 14px;
  }

  @include media-breakpoint-down(md) {
    padding: 24px;
  }

  &:hover,
  &:focus {
    color: $seaGreen;
    text-decoration: none;

    &::after {
      @include transvalue(transform, translateX(0) skew(-45deg));
    }
  }
}

@mixin btnprimary {
  @include btnStyle;
  @include btnStyleDefault;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: $seaGreen;
  border: 2px solid $seaGreen;
  color: $white !important;

  &:hover,
  &:focus {
    background-color: $white;
    color: $seaGreen !important;
  }
}

@mixin btnSecondary {
  @include btnStyle;
  @include btnStyleDefault;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: $white;
  border: 2px solid $white;
  color: $seaGreen;

  &::after {
    background: $seaGreen;
  }

  &:hover,
  &:focus {
    background: $seaGreen;
    color: $white;
  }
}

@mixin btnOutline {
  @include btnStyle;
  @include btnStyleDefault;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: transparent !important;
  border: 2px solid $seaGreen;
  color: $seaGreen !important;

  &::after {
    background: $seaGreen ;
  }

  &:hover,
  &:focus {
    background: $white !important;
    color: $white !important;
  }
}

@mixin btnWitharrow {
  @include btnStyle;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding-right: 25px;
  @include transvalue(transition, all 0.3s);
  color: $darkGrey;

  // &::after {
  //     position: absolute;
  //     content: "\e810";
  //     color: $seaGreen;
  //     font-size: 12px;
  //     font-family: $fontello;
  //     right: 0;
  //     top: 2px;
  // }
  &:hover,
  &:focus {
    color: $seaGreen !important;
    text-decoration: none;
  }

  &.light {
    color: $white;

    &::after {
      color: $white;
    }

    &:hover,
    &:focus {
      color: $white;

      &::after {
        color: $white;
      }
    }
  }

  &.dark {
    color: $darkGrey;

    &::after {
      color: $seaGreen;
    }

    &:hover,
    &:focus {
      color: $darkGrey;

      &::after {
        color: $seaGreen;
      }
    }
  }
}

@mixin btnyellow {
  @include btnStyle;
  @include btnStyleDefault;
  display: flex;
  align-items: center;
  background-color: $yellow;
  border: 2px solid $yellow;
  color: $black !important;

  &:hover,
  &:focus {
    background-color: $white;
    color: $yellow !important;
  }
}

@mixin loaderAnimation {
  -webkit-animation: loader 1.1s infinite ease;
  -moz-animation: loader 1.1s infinite ease;
  -ms-animation: loader 1.1s infinite ease;
  -o-animation: loader 1.1s infinite ease;
  animation: loader 1.1s infinite ease;
}